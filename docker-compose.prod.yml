version: '3.8'

volumes:
  bare_repositories:
    external: true
  builds:
    external: true

services:
  app:
    build:
      dockerfile: Dockerfile
      context: react-app
      target: production
    volumes:
      - ./react-app:/var/src/react-app
      - /var/src/react-app/node_modules
    restart: always
    hostname: application
    env_file:
      - .env
    ports:
      - 8000:80
    networks:
      - backend
      - frontend
  gateway:
    build:
      dockerfile: Dockerfile
      context: gateway
      target: production
    volumes:
      - ./gateway:/var/src/gateway
      - /var/src/gateway/node_modules
      - ./gateway/config/.gitconfig:/root/.gitconfig
    restart: always
    hostname: gateway
    env_file:
      - .env
    ports:
      - 8080:8080
    networks:
      - backend
      - frontend
  deployment:
    build:
      dockerfile: Dockerfile
      context: deployment
      target: production
    volumes:
      - ./deployment:/var/src/deployment
      - /var/src/deployment/node_modules
      - bare_repositories:/var/www/bare_repositories
      - builds:/var/www/builds
      - ./deployment/config/.gitconfig:/root/.gitconfig
    restart: always
    hostname: deployment
    env_file:
      - .env
    networks:
      - backend

  db:
    image: 'mongo:3.7'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - "./db/data/db-files:/data/db"
      - "./db/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27017:27017
    networks:
      - backend
  caddy:
    build:
      dockerfile: Dockerfile
      context: caddy
      target: development
    restart: always
    hostname: caddy_server
    ports:
      - 80:80
    volumes:
      - ./caddy:/var/src/caddy
      - /var/src/caddy/node_modules
      - builds:/var/www/builds
    networks:
      - backend
      - frontend
  
  redis:
    image: redis:6.2-alpine
    restart: always
    hostname: redis_server
    ports:
      - 6379:6379
    # command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    # volumes: 
      # - cache:/data
    networks:
    - backend

networks:
  backend:
    driver: bridge
  frontend:
    external:
      name: infrastructure